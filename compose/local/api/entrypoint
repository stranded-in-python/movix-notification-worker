#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset



if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi

postgres_ready() {
python << END
import sys

import psycopg2

try:
    psycopg2.connect(
        dbname="${POSTGRES_DB}",
        user="${POSTGRES_USER}",
        password="${POSTGRES_PASSWORD}",
        host="${POSTGRES_HOST}",
        port="${POSTGRES_PORT}",
    )
except psycopg2.OperationalError:
    sys.exit(-1)
sys.exit(0)

END
}

rabbitmq_ready() {
python << END
import sys

import asyncio
import pika

try:
    # Установка соединения с RabbitMQ
    connection = pika.BlockingConnection(
        pika.URLParameters("${AMQP_URL}")
    )

    # Создание канала
    channel = connection.channel()

    connection.close()

except pika.exceptions.AMQPConnectionError:
    print("Connection failed!")
    sys.exit(-1)
sys.exit(0)

END
}

until postgres_ready; do
  >&2 echo 'Waiting for PostgreSQL to become available...'
  sleep 1
done
>&2 echo 'PostgreSQL is available'

until rabbitmq_ready; do
  >&2 echo 'Waiting for RabbitMQ to become available...'
  sleep 1
done
>&2 echo 'RabbitMQ is available'

exec "$@"
